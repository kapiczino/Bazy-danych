LEKCJA 1.

Zadanie 1.
CREATE TABLE postac (id_postaci INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT, nazwa VARCHAR(40),rodzaj ENUM ('wiking','ptak','kobieta'),data_ur DATE,wiek INTEGER UNSIGNED);
INSERT INTO postac VALUES ('1', "Bjorn", "wiking", '2000-10-27', 22);
INSERT INTO postac VALUES ('2', "Drozd", "ptak", '2021-10-27', 1);
INSERT INTO postac VALUES ('3', "TeÅ›ciowa", "kobieta", '1982-10-27', 40);
UPDATE postac SET wiek=88 WHERE nazwa="Teciowa"

Zadanie 2.
CREATE TABLE walizka
(id_walizki INT AUTO_INCREMENT PRIMARY KEY,pojemnosc INT UNSIGNED,kolor ENUM('rozowy','czerwony','teczowy','zolty'),id_wlasciciela INT,FOREIGN KEY(id_wlasciciela) REFERENCES postac(id_postaci) ON DELETE CASCADE);
ALTER TABLE walizka MODIFY kolor ENUM('rozowy','czerwony','teczowy','zolty') DEFAULT 'rozowy';
INSERT INTO walizka VALUES('1','20',DEFAULT,'2'),('2','30',DEFAULT,'3');

Zadanie 3.
CREATE TABLE izba(adres_budynku INT AUTO_INCREMENT,nazwa_izby VARCHAR(40),metraz INT UNSIGNED,wlasciciel INT,PRIMARY KEY(adres_budynku,nazwa_izby),FOREIGN KEY(wlasciciel) REFERENCES postac(id_postaci) ON DELETE SET NULL);
ALTER TABLE izba ADD COLUMN kolor_izby VARCHAR(20) DEFAULT 'czarny' AFTER metraz;
INSERT INTO izba VALUES ('1','spizarnia','8',DEFAULT,'1');

Zadanie 4.
CREATE TABLE przetwory(id_przetworu INT AUTO_INCREMENT PRIMARY KEY,rok_produkcji YEAR DEFAULT (1654),id_wykonawcy INT,zawartosc VARCHAR(50),dodatek VARCHAR(50) DEFAULT 'papryczka chilli',id_konsumenta INT,FOREIGN KEY(id_wykonawcy) REFERENCES postac(id_postaci),FOREIGN KEY(id_konsumenta) REFERENCES postac(id_postaci));
INSERT INTO przetwory VALUES ('1',1939,'1','bigos',DEFAULT,'1');

Zadanie 5.
INSERT INTO postac VALUES (4, "Henio", "wiking", '1962-10-27',60);
INSERT INTO postac VALUES (5, "Mietek", "wiking", '1972-11-01',50);
INSERT INTO postac VALUES (6, "Wlodymieryn", "wiking", '1940-01-02',82);
INSERT INTO postac VALUES (7, "Howlin", "wiking", '1981-12-09',41);
INSERT INTO postac VALUES (8, "Aldolf", "wiking", '1922-02-21',100);
CREATE TABLE statek(nazwa_statku INT PRIMARY KEY, rodzaj_statku ENUM('towarowy','pasazerski'), data_wodowania DATE, max_ladownosc INT UNSIGNED);
INSERT INTO statek VALUES ('2137', 'towarowy', '2022-07-08', 30000);
INSERT INTO statek VALUES ('0069', 'pasazerski', '2022-08-15', 15000);
ALTER TABLE postac ADD COLUMN funkcja VARCHAR(50) DEFAULT 'pasazer';
UPDATE postac SET funkcja='kapitan' WHERE id_postaci=1;
ALTER TABLE statek ADD CONSTANT fk_StatekPostac FOREIGN KEY (id_postaci) REFERENCES postac(id_postaci);
DROP TABLE izba

LEKCJA 2.

Zadanie. 1
SELECT * FROM postac WHERE rodzaj = 'wiking' ORDER BY wiek DESC;
DELETE FROM postac WHERE wiek = 100;
DELETE FROM postac WHERE wiek = 83;

ALTER TABLE przetwory DROP FOREIGN KEY przetwory_ibfk_1;
ALTER TABLE przetwory DROP FOREIGN KEY przetwory_ibfk_2;
ALTER TABLE walizka DROP FOREIGN KEY walizka_ibfk_1;
ALTER TABLE postac MODIFY id_postaci INT NOT NULL;
ALTER TABLE postac DROP PRIMARY KEY;

Zadanie 2. 
ALTER TABLE postac ADD COLUMN pesel VARCHAR(11);
UPDATE postac SET pesel='12345678911' WHERE id_postaci = 1;
UPDATE postac SET pesel='00987654321' WHERE id_postaci = 2;
UPDATE postac SET pesel='77654321908' WHERE id_postaci = 3;
UPDATE postac SET pesel='54432109754' WHERE id_postaci = 4;
UPDATE postac SET pesel='67328907222' WHERE id_postaci = 6;
UPDATE postac SET pesel='77649271203' WHERE id_postaci = 7;
ALTER TABLE postac ADD CONSTRAINT PRIMARY KEY(pesel);

ALTER TABLE postac MODIFY rodzaj ENUM('kobieta','wiking','ptak','syrena');

INSERT INTO postac VALUES
('5','Gertruda Nieszczera','syrena','1985-06-30','37',NULL,NULL,'65445665456');

Zadanie 3.
UPDATE postac SET nazwa_statku = 'statek_1' WHERE nazwa LIKE '%a%';
UPDATE statek SET max_ladownosc = max_ladownosc * 0.7
WHERE data_wodowania BETWEEN '1901-01-01' AND '2000-12-31';
SELECT IF(wiek > 1000,'tak','nie') FROM postac;

Zadanie 4.
ALTER TABLE postac MODIFY rodzaj ENUM('kobieta','wiking','ptak','syrena','waz');
INSERT INTO postac VALUES
('8','Loko','waz','1949-07-29','73',NULL,NULL,'22223332232');

UPDATE postac SET nazwa_statku = NULL where nazwa = 'Tesciowa';

CREATE TABLE marynarz(
id_postaci INT NOT NULL,
nazwa VARCHAR(40),
rodzaj ENUM('kobieta','wiking','ptak','syrena','waz'),
data_ur DATE,
wiek INT UNSIGNED,
funkcja VARCHAR(50),
nazwa_statku VARCHAR(50),
pesel VARCHAR(11) NOT NULL,
FOREIGN KEY(pesel) REFERENCES postac(pesel) );

INSERT INTO marynarz SELECT * FROM postac WHERE nazwa_statku IS NOT NULL;

Zadanie 5.
UPDATE marynarz SET nazwa_statku = NULL;
UPDATE postac SET nazwa_statku = NULL;
DELETE FROM marynarz WHERE pesel = '99099922255';
DELETE FROM postac WHERE pesel = '99099922255';
DELETE FROM statek WHERE nazwa_statku LIKE '%';
ALTER TABLE postac DROP FOREIGN KEY postac_ibfk_1;
DROP TABLE statek;

CREATE TABLE zwierz AS SELECT * FROM postac;
SELECT * FROM zwierz;
DELETE FROM zwierz WHERE rodzaj = 'kobieta';
DELETE FROM zwierz WHERE rodzaj = 'wiking';
DELETE FROM zwierz WHERE rodzaj = 'syrena';

Lekcja 3

Zadanie 1.
CREATE TABLE kreatura AS SELECT * FROM wikingowie.kreatura;
CREATE TABLE zasob AS SELECT * FROM wikingowie.zasob;
CREATE TABLE ekwipunek AS SELECT * FROM wikingowie.ekwipunek;
SELECT * FROM zasob;
SELECT * FROM zasob WHERE rodzaj = 'jedzenie';
SELECT idZasobu, ilosc FROM ekwipunek WHERE idKreatury IN(1,3,5);

Zadanie 2.
SELECT * FROM kreatura WHERE udzwig >= 50 AND rodzaj != 'wiedzma';
SELECT * FROM zasob WHERE waga BETWEEN 2 AND 5;
SELECT * FROM kreatura WHERE nazwa LIKE '%or%' AND udzwig BETWEEN 30 AND 70;

Zadanie 3.
SELECT * FROM zasob WHERE dataPozyskania LIKE '%-07-%' OR dataPozyskania LIKE '%-08-%';
SELECT * FROM zasob WHERE rodzaj IS NOT NULL ORDER BY waga ASC;
SELECT * FROM kreatura ORDER BY dataUr ASC LIMIT 5;

Zadanie 4.
SELECT rodzaj FROM zasob GROUP BY rodzaj HAVING COUNT(rodzaj) = 1;
albo;
SELECT DISTINCT rodzaj FROM zasob WHERE rodzaj IS NOT NULL;
(nie wiem o ktore chodzi);

SELECT CONCAT(nazwa,' - ',rodzaj) AS nazwa_i_rodzaj FROM kreatura WHERE rodzaj LIKE 'wi%';
SELECT waga * ilosc AS calkowita_waga FROM zasob
WHERE dataPozyskania BETWEEN '2000-01-01' AND '2007-12-31';

Zadanie 5.
SELECT waga * 0.7 AS waga_netto, waga * 0.3 AS waga_odpadek FROM zasob WHERE rodzaj = 'jedzenie';
SELECT * FROM zasob WHERE rodzaj IS NULL;
SELECT DISTINCT rodzaj, nazwa FROM zasob WHERE nazwa LIKE 'Ba%' OR nazwa LIKE '%os' ORDER BY nazwa;

Lekcja 4

Zadanie 1.
SELECT AVG(waga) FROM kreatura WHERE rodzaj = 'wiking';
SELECT rodzaj, COUNT(rodzaj) AS ile_rodzaj, AVG(waga) FROM kreatura GROUP BY rodzaj;
SELECT rodzaj, COUNT(rodzaj) AS ile_rodzaj, (SUM(2022 - YEAR(dataUr))) / COUNT(rodzaj) AS avg_wiek
FROM kreatura GROUP BY rodzaj;

Zadanie 2.
SELECT rodzaj, COUNT(rodzaj), SUM(waga) FROM zasob WHERE rodzaj IS NOT NULL GROUP BY rodzaj;
SELECT nazwa, COUNT(nazwa) AS ile_nazwa, SUM(waga * ilosc) AS waga_razem
FROM zasob GROUP BY nazwa HAVING ile_nazwa > 3 AND waga_razem > 10;
SELECT nazwa, ilosc, rodzaj FROM zasob WHERE rodzaj IS NOT NULL GROUP BY rodzaj HAVING ilosc > 1;

Zadanie 3.
SELECT idKreatury, idZasobu, ilosc, SUM(idZasobu * ilosc) FROM ekwipunek GROUP BY idKreatury;
